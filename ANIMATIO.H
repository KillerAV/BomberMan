void animation1()
{
	int j,k;
	for(j=20;j<300;j+=20)
	{
		slowworm(j,15);
		mediumworm(630-j,15);
		fastworm(630-j,465);
		passthroughworm(j,465);
		delay(150);
		}
	for(j=20,k=640;k>=0;j+=20,k-=20)
	{
		setcolor(LIGHTRED);
		rectangle(0,0,j,4);
		setfillstyle(1,LIGHTRED);
		floodfill(j-5,1,LIGHTRED);
		setcolor(YELLOW);
		rectangle(0,4,j,8);
		setfillstyle(1,YELLOW);
		floodfill(j-5,5,YELLOW);
		setcolor(WHITE);
		rectangle(0,8,j,16);
		setfillstyle(1,WHITE);
		floodfill(j-5,9,WHITE);
		setcolor(YELLOW);
		rectangle(0,16,j,20);
		setfillstyle(1,YELLOW);
		floodfill(j-5,17,YELLOW);
		setcolor(LIGHTRED);
		rectangle(0,20,j,24);
		setfillstyle(1,LIGHTRED);
		floodfill(j-5,21,LIGHTRED);
		originalplayer(j+15,10,0);

		setcolor(LIGHTRED);
		rectangle(660,454,k,458);
		setfillstyle(1,LIGHTRED);
		floodfill(k+5,455,LIGHTRED);
		setcolor(YELLOW);
		rectangle(660,458,k,462);
		setfillstyle(1,YELLOW);
		floodfill(k+5,459,YELLOW);
		setcolor(WHITE);
		rectangle(660,462,k,472);
		setfillstyle(1,WHITE);
		floodfill(k+5,463,WHITE);
		setcolor(YELLOW);
		rectangle(660,472,k,476);
		setfillstyle(1,YELLOW);
		floodfill(k+5,473,YELLOW);
		setcolor(LIGHTRED);
		rectangle(660,476,k,480);
		setfillstyle(1,LIGHTRED);
		floodfill(k+5,477,LIGHTRED);
		originalplayer(k-15,465,0);
		delay(150);
		replaceplayer(j+15,10);
		replaceplayer(k-15,465);
		}
	}

void playermake(int x,int y=1)
{
	setcolor(WHITE);
	setlinestyle(0,0,0);
	circle(x,200,20);
	setfillstyle(1,WHITE);
	floodfill(x,200,WHITE);
	rectangle(x-16,218,x+15,250);
	setfillstyle(1,LIGHTCYAN);
	floodfill(x-9,219,WHITE);
	setlinestyle(0,0,3);
	setcolor(RED);
	line(x-16,230,x-7,240);
	line(x-7,240,x+5,235);
	setlinestyle(0,0,0);
	rectangle(x+16,225,x+20,240);
	setfillstyle(1,RED);
	floodfill(x+17,226,RED);
	setcolor(LIGHTRED);
	circle(x+8,234,5);
	setfillstyle(1,LIGHTRED);
	floodfill(x+8,234,LIGHTRED);
	circle(x+18,243,4);
	setfillstyle(1,LIGHTRED);
	floodfill(x+20,243,LIGHTRED);
	if(y==1)
	{
		setcolor(DARKGRAY);
		circle(x+28,225,15);
		setfillstyle(1,DARKGRAY);
		floodfill(x+28,225,DARKGRAY);
		setlinestyle(0,0,3);
		line(x+35,213,x+43,199);
		}
	setlinestyle(0,0,3);
	setcolor(RED);
	setlinestyle(0,0,0);
	rectangle(x-16,250,x+15,260);
	rectangle(x-16,260,x-4,265);
	rectangle(x+3,260,x+15,265);
	setfillstyle(1,RED);
	floodfill(x-15,251,RED);
	floodfill(x-15,261,RED);
	floodfill(x+4,261,RED);
	setcolor(WHITE);
	rectangle(x-16,265,x-4,270);
	rectangle(x+3,265,x+15,270);
	setfillstyle(1,WHITE);
	floodfill(x-15,266,WHITE);
	floodfill(x+4,266,WHITE);
	setcolor(LIGHTRED);
	setlinestyle(0,0,3);
	line(x-15,187,x-30,170);
	setcolor(DARKGRAY);
	line(x,197,x+5,197);
	line(x+10,197,x+15,197);
	}

void playerremove(int x,int y=1)
{
	setcolor(LIGHTGRAY);
	setlinestyle(0,0,0);
	circle(x,200,20);
	setfillstyle(1,GREEN);
	floodfill(x,200,LIGHTGRAY);
	rectangle(x-16,218,x+15,250);
	floodfill(x-9,219,LIGHTGRAY);
	setlinestyle(0,0,3);
	setcolor(YELLOW);
	line(x-16,230,x-7,240);
	line(x-7,240,x+5,235);
	setlinestyle(0,0,0);
	rectangle(x+16,225,x+20,240);
	floodfill(x+17,226,YELLOW);
	setcolor(LIGHTBLUE);
	circle(x+8,234,5);
	floodfill(x+8,234,LIGHTBLUE);
	circle(x+18,243,4);
	floodfill(x+20,243,LIGHTBLUE);
	if(y==1)
	{
		setcolor(DARKGRAY);
		circle(x+28,225,15);
		floodfill(x+28,225,DARKGRAY);
		setlinestyle(0,0,3);
		line(x+35,213,x+43,199);
		}
	setlinestyle(0,0,3);
	setcolor(CYAN);
	setlinestyle(0,0,0);
	rectangle(x-16,250,x+15,260);
	rectangle(x-16,260,x-4,265);
	rectangle(x+3,260,x+15,265);
	floodfill(x-15,251,CYAN);
	floodfill(x-15,261,CYAN);
	floodfill(x+4,261,CYAN);
	setcolor(LIGHTGRAY);
	rectangle(x-16,265,x-4,270);
	rectangle(x+3,265,x+15,270);
	floodfill(x-15,266,LIGHTGRAY);
	floodfill(x+4,266,LIGHTGRAY);


	setcolor(GREEN);
	setlinestyle(0,0,0);
	circle(x,200,20);
	rectangle(x-16,218,x+15,250);
	setlinestyle(0,0,3);
	line(x-16,230,x-7,240);
	line(x-7,240,x+5,235);
	setlinestyle(0,0,0);
	rectangle(x+16,225,x+20,240);
	circle(x+8,234,5);
	circle(x+18,243,4);
	if(y==1)
	{
		circle(x+28,225,15);
		setlinestyle(0,0,3);
		line(x+35,213,x+43,199);
		}
	setlinestyle(0,0,3);
	setlinestyle(0,0,0);
	rectangle(x-16,250,x+15,260);
	rectangle(x-16,260,x-4,265);
	rectangle(x+3,260,x+15,265);
	rectangle(x-16,265,x-4,270);
	rectangle(x+3,265,x+15,270);
	setlinestyle(0,0,3);
	line(x-15,187,x-30,170);
	line(x,197,x+5,197);
	line(x+10,197,x+15,197);
	}

void animation(char NAME[50])
{
	cleardevice();
	setbkcolor(GREEN);
	animation1();
	for(int i=23;i<230;i+=20)
	{
		playermake(i);
		walking();
		if(i<223)
			playerremove(i);
		}
	setcolor(RED);
	int arr3[14]={220,175,220,110,390,110,390,175,270,175,265,185,260,175};
	setfillstyle(1,LIGHTMAGENTA);
	fillpoly(7,arr3);
	/*
		fillpoly draws a polygon and fill it with the current fillstyle
		we pass no of end points,vertices of the polygon and an array
		containing coordinates of each vertice in {x,y,x,y,x,y} form
		*/

	setcolor(YELLOW);
	settextstyle(2,0,6);
	outtextxy(280,115,"NAME:");
	char ch[2];
	int count=0,x=230;
	while(ch[0]!=13)
	{
		while(!kbhit())
		{
			setcolor(BLUE);
			outtextxy(x,140,"|");
			delay(100);
			setcolor(LIGHTMAGENTA);
			outtextxy(x,140,"|");
			delay(100);
			}
		if(kbhit())
			ch[0]=getch();
		if((isalnum(ch[0])||(ch[0]==' '))&&x<380)
		{
			setcolor(BLUE);
			NAME[count]=ch[0];
			count++;
			ch[1]='\0';
			outtextxy(x,140,ch);
			x+=10;
			}
		else if(ch[0]==8&&count>0)
		{
			setcolor(LIGHTMAGENTA);
			count--;
			x-=10;
			ch[0]=NAME[count];
			ch[1]='\0';
			outtextxy(x,140,ch);
			}
		}
	NAME[count]='\0';
	setfillstyle(1,GREEN);
	floodfill(20,100,LIGHTRED);
	setcolor(WHITE);
	circle(335,250,25);
	setfillstyle(1,DARKGRAY);
	floodfill(335,250,WHITE);
	line(340,225,350,205);
	for(i=223;i>=-50;i-=20)
	{
		playermake(i,0);
		walking();
		playerremove(i,0);
		setcolor(WHITE);
		circle(335,250,25);
		setfillstyle(1,DARKGRAY);
		floodfill(335,250,WHITE);
		}
	setcolor(RED);
	line(340,225,350,205);
	delay(300);
	setcolor(WHITE);
	circle(335,250,25);
	setfillstyle(1,BROWN);
	floodfill(335,250,WHITE);
	delay(300);
	setcolor(WHITE);
	circle(335,250,25);
	setfillstyle(1,RED);
	floodfill(335,250,WHITE);
	setlinestyle(0,0,3);

	int arr[42]={350,200,355,220,370,225,360,240,380,255,362,255,360,265,375,275,350,280,333,305,330,280,310,290,315,265,295,262,302,255,297,240,307,238,290,225,310,230,320,200,340,215};
	fillpoly(21,arr);
	circle(335,250,25);
	setfillstyle(1,DARKGRAY);
	setcolor(WHITE);
	floodfill(335,250,WHITE);
	setfillstyle(1,BROWN);
	bomba();
	delay(100);

	int arr2[42]={350,150,360,190,410,200,390,235,410,270,382,280,380,285,385,295,355,310,333,333,325,310,302,315,295,280,250,262,272,260,280,235,252,228,278,210,295,215,305,165,338,190};
	fillpoly(21,arr2);
	setfillstyle(1,RED);
	fillpoly(21,arr);
	circle(335,250,25);
	setfillstyle(1,DARKGRAY);
	floodfill(335,250,WHITE);
	setfillstyle(1,BROWN);
	delay(100);

	cleardevice();
	setbkcolor(RED);
	delay(500);
	}
